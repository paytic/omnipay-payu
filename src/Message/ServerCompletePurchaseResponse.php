<?php

namespace Paytic\Omnipay\Payu\Message;

use Paytic\Omnipay\Common\Message\Traits\GatewayNotificationResponseTrait;

/**
 * Class PurchaseResponse
 * @package ByTIC\Common\Payments\Gateways\Providers\AbstractGateway\Messages
 */
class ServerCompletePurchaseResponse extends AbstractResponse
{
    use GatewayNotificationResponseTrait;

    public function send()
    {
        echo $this->getContent();
    }

    /**
     * Is the response successful?
     *
     * @return boolean
     */
    public function isSuccessful()
    {
        return in_array($this->getCode(), ['PAYMENT_AUTHORIZED', 'PAYMENT_RECEIVED', 'COMPLETE']);
    }

    /** @noinspection PhpMissingParentCallCommonInspection
     * Status code (string)
     *
     * @return string
     */
    public function getCode()
    {
        return $this->getNotificationDataItem('ORDERSTATUS');
    }

    /**
     * @return string
     */
    public function getContent()
    {
        return '<EPAYMENT>'.$this->data['dateReturn'].'|'.$this->data['hashReturn'].'</EPAYMENT>';
    }

    /**  @noinspection PhpMissingParentCallCommonInspection
     * Is the response successful?
     *
     * @return boolean
     */
    public function isPending()
    {
        return in_array($this->getCode(), ['TEST']);
    }

    /** @noinspection PhpMissingParentCallCommonInspection
     * Is the transaction cancelled by the user?
     *
     * @return boolean
     */
    public function isCancelled()
    {
        return in_array($this->getCode(), ['REVERSED', 'REFUND'], true);
    }

    /** @noinspection PhpMissingParentCallCommonInspection
     * Gateway Reference
     *
     * @return null|string A reference provided by the gateway to represent this transaction
     */
    public function getTransactionReference()
    {
        return $this->getNotificationDataItem('REFNO');
    }

    /** @noinspection PhpMissingParentCallCommonInspection
     * Get the transaction ID as generated by the merchant website.
     *
     * @return string
     */
    public function getTransactionId()
    {
        return $this->getNotificationDataItem('REFNOEXT');
    }

    /** @noinspection PhpMissingParentCallCommonInspection
     * @return false|string
     */
    public function getTransactionDate()
    {
        return $this->getNotificationDataItem('SALEDATE');
    }
}
